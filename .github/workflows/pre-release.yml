name: Pre-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Pre-release version (without "v" prefix)'
        required: true
      dashboard:
        description: 'Bee Dashboard version/tag/commit if required'
        required: false
      branch:
        description: 'Branch of this repo to build (default "master")'
        default: master
        required: false

jobs:
  publish-macos-m1:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: 18

      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install setuptools
        run: python3 -m pip install setuptools

      - name: Install all dependencies
        run: npm ci && cd ./ui && npm ci

      - name: Install custom Bee Dashboard
        if: github.event.inputs.dashboard != ''
        run: cd ./ui && npm install github:ethersphere/bee-dashboard#${{ github.event.inputs.dashboard }}

      - name: Replace Version in package.json
        uses: jossef/action-set-json-field@v1
        with:
          file: package.json
          field: version
          value: ${{ github.event.inputs.version }}

      - name: Set MacOS signing certs
        run: .github/tools/add-macos-cert.sh
        env:
          MACOS_CERT_P12: ${{ secrets.MACOS_CERT_P12 }}
          MACOS_CERT_PASSWORD: ${{ secrets.MACOS_CERT_PASSWORD }}

      - name: Build
        run: npm run build

      - name: Purge ui src
        run: npx rimraf ./ui

      - name: Publish MacOS arm64
        run: npm run publish:mac:arm64
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: 18

      - uses: actions/setup-python@v4
        if: matrix.os == 'macos-latest'
        with:
          python-version: '3.12'

      - name: Install setuptools
        if: matrix.os == 'macos-latest'
        run: python3 -m pip install setuptools

      - name: Install all dependencies
        run: npm ci && cd ./ui && npm ci

      - name: Reconfigure git to use HTTP authentication
        if: github.event.inputs.dashboard != ''
        run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/

      - name: Install custom Bee Dashboard
        if: github.event.inputs.dashboard != ''
        run: cd ./ui && npm install github:ethersphere/bee-dashboard#${{ github.event.inputs.dashboard }}

      - name: Replace Version in package.json
        uses: jossef/action-set-json-field@v1
        with:
          file: package.json
          field: version
          value: ${{ github.event.inputs.version }}

      - name: Set MacOS signing certs
        if: matrix.os == 'macos-latest'
        run: .github/tools/add-macos-cert.sh
        env:
          MACOS_CERT_P12: ${{ secrets.MACOS_CERT_P12 }}
          MACOS_CERT_PASSWORD: ${{ secrets.MACOS_CERT_PASSWORD }}

      - name: Set Windows signing certificate
        if: matrix.os == 'windows-latest'
        continue-on-error: true
        id: write_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'win-certificate.pfx'
          encodedString: ${{ secrets.WINDOWS_CODESIGN_P12 }}

      - name: Build
        run: npm run build

      - name: Purge ui src
        run: npx rimraf ./ui

      - name: Publish
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WINDOWS_CODESIGN_FILE: ${{ steps.write_file.outputs.filePath }}
          WINDOWS_CODESIGN_PASSWORD: ${{ secrets.WINDOWS_CODESIGN_PASSWORD }}
        run: npm run publish

      - name: Publish Linux arm64
        if: matrix.os == 'ubuntu-latest'
        run: npm run publish:linux:arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
