name: Release
on:
  release:
    types:
      - created

jobs:
  publish:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          node-version: 18

      - name: Install dependencies
        run: npm ci && cd ./installer && npm ci

      - name: Read Bee Dashboard version
        id: dashboardVersion
        uses:  ashley-taylor/read-json-property-action@v1.0
        with:
          path: package.json
          property: dependencies.@ethersphere/bee-dashboard

      - name: Custom build Bee Dashboard with Sentry enabled
        run: npm install ethersphere/bee-dashboard#${{dashboardVersion}}
        env:
          REACT_APP_SENTRY_KEY: ${{ secrets.SENTRY_KEY_DASHBOARD }}
          REACT_APP_SENTRY_ENVIRONMENT: 'desktop'

      - name: Configure secrets
        uses: jossef/action-set-json-field@v1
        with:
          file: src/.sentry.json
          field: KEY
          value: ${{ secrets.SENTRY_KEY }}

      - name: Set MacOS signing certs
        if: matrix.os == 'macos-latest'
        run: .github/tools/add-macos-cert.sh
        env:
          MACOS_CERT_P12: ${{ secrets.MACOS_CERT_P12 }}
          MACOS_CERT_PASSWORD: ${{ secrets.MACOS_CERT_PASSWORD }}

      - name: Set Windows signing certificate
        if: matrix.os == 'windows-latest'
        continue-on-error: true
        id: write_file
        uses: timheuer/base64-to-file@v1
        with:
          fileName: 'win-certificate.pfx'
          encodedString: ${{ secrets.WINDOWS_CODESIGN_P12 }}

      - name: Build
        run: npm run build

      - name: Purge installer src
        run: npx rimraf ./installer

      - name: Publish
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WINDOWS_CODESIGN_FILE: ${{ steps.write_file.outputs.filePath }}
          WINDOWS_CODESIGN_PASSWORD: ${{ secrets.WINDOWS_CODESIGN_PASSWORD }}
        run: npm run publish

      - name: Publish arm64
        if: matrix.os == 'macos-latest'
        run: npx electron-forge publish --arch=arm64
        env:
          DEBUG: "*"
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Sentry release
        if: matrix.os == 'ubuntu-latest'
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          ignore_missing: true
          ignore_empty: true
          sourcemaps: ./dist/desktop/src
          version: ${{ github.ref }}
